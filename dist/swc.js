/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["SWC"] = factory();
	else
		root["SWC"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/swc.js":
/*!***********************!*\
  !*** ./src/js/swc.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SenangWebsChatbot: () => (/* binding */ SenangWebsChatbot),\n/* harmony export */   defaultKnowledgeBase: () => (/* binding */ defaultKnowledgeBase),\n/* harmony export */   initializeChatbot: () => (/* binding */ initializeChatbot)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// SenangWebs Chatbot Library\nvar SenangWebsChatbot = /*#__PURE__*/function () {\n  function SenangWebsChatbot(knowledgeBase) {\n    _classCallCheck(this, SenangWebsChatbot);\n    this.knowledgeBase = knowledgeBase;\n    this.currentNode = null;\n  }\n  return _createClass(SenangWebsChatbot, [{\n    key: \"init\",\n    value: function init() {\n      this.currentNode = this.knowledgeBase.find(function (node) {\n        return node.id === 'welcome';\n      }) || this.knowledgeBase[0];\n      return {\n        reply: this.currentNode.reply,\n        options: this.currentNode.options\n      };\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(input) {\n      var lowercaseInput = input.toLowerCase();\n      var words = lowercaseInput.split(/\\s+/);\n      var keywordCounts = {};\n      this.knowledgeBase.forEach(function (node) {\n        node.keyword.forEach(function (keyword) {\n          keywordCounts[keyword] = words.filter(function (word) {\n            return word === keyword;\n          }).length;\n        });\n      });\n      var bestMatch = null;\n      var maxScore = 0;\n      this.knowledgeBase.forEach(function (node) {\n        var score = node.keyword.reduce(function (sum, keyword) {\n          return sum + (keywordCounts[keyword] || 0);\n        }, 0);\n        if (score > maxScore) {\n          maxScore = score;\n          bestMatch = node;\n        }\n      });\n      if (bestMatch) {\n        this.currentNode = bestMatch;\n        return {\n          reply: bestMatch.reply,\n          options: bestMatch.options\n        };\n      } else {\n        return {\n          reply: \"I'm sorry, I didn't understand that. Can you please rephrase?\",\n          options: null\n        };\n      }\n    }\n  }, {\n    key: \"handleOptionSelection\",\n    value: function handleOptionSelection(replyId) {\n      var nextNode = this.knowledgeBase.find(function (node) {\n        return node.id === replyId;\n      });\n      if (nextNode) {\n        this.currentNode = nextNode;\n        return {\n          reply: nextNode.reply,\n          options: nextNode.options\n        };\n      } else {\n        return {\n          reply: \"I'm sorry, I couldn't find the appropriate response. How else can I assist you?\",\n          options: null\n        };\n      }\n    }\n  }]);\n}(); // Default knowledge base\nvar defaultKnowledgeBase = [{\n  id: 'welcome',\n  keyword: ['hello', 'hi', 'hey'],\n  reply: 'Welcome! How can I assist you today?',\n  options: [{\n    label: 'Get Help',\n    reply_id: 'help'\n  }, {\n    label: 'End Chat',\n    reply_id: 'goodbye'\n  }]\n}, {\n  id: 'help',\n  keyword: ['help', 'support', 'assist'],\n  reply: 'Sure, I can help! What do you need assistance with?',\n  options: [{\n    label: 'Product Information',\n    reply_id: 'product'\n  }, {\n    label: 'Billing',\n    reply_id: 'billing'\n  }, {\n    label: 'Technical Support',\n    reply_id: 'tech_support'\n  }]\n}, {\n  id: 'product',\n  keyword: ['product', 'information'],\n  reply: 'Our product is designed to make your life easier. Would you like to know more about its features or pricing?',\n  options: [{\n    label: 'Features',\n    reply_id: 'features'\n  }, {\n    label: 'Pricing',\n    reply_id: 'pricing'\n  }]\n}, {\n  id: 'billing',\n  keyword: ['billing', 'payment', 'invoice'],\n  reply: 'For billing inquiries, please visit our billing portal or contact our finance department at billing@example.com.',\n  options: [{\n    label: 'Back to Help',\n    reply_id: 'help'\n  }, {\n    label: 'End Chat',\n    reply_id: 'goodbye'\n  }]\n}, {\n  id: 'tech_support',\n  keyword: ['technical', 'support', 'issue'],\n  reply: 'For technical support, please describe your issue in detail and well do our best to assist you.'\n}, {\n  id: 'features',\n  keyword: ['features', 'functionality'],\n  reply: 'Our product offers cutting-edge features including AI-powered analytics, real-time collaboration, and seamless integration with popular tools.',\n  options: [{\n    label: 'Back to Product Info',\n    reply_id: 'product'\n  }, {\n    label: 'End Chat',\n    reply_id: 'goodbye'\n  }]\n}, {\n  id: 'pricing',\n  keyword: ['pricing', 'cost', 'plans'],\n  reply: 'We offer flexible pricing plans starting at $9.99/month. For detailed pricing information, please visit our website or contact our sales team.',\n  options: [{\n    label: 'Back to Product Info',\n    reply_id: 'product'\n  }, {\n    label: 'End Chat',\n    reply_id: 'goodbye'\n  }]\n}, {\n  id: 'goodbye',\n  keyword: ['bye', 'goodbye', 'end'],\n  reply: 'Thank you for chatting with us. Have a great day!',\n  options: [{\n    label: 'Restart Chat',\n    reply_id: 'welcome'\n  }]\n}];\nfunction createChatbotUI(containerElement, themeColor, botName, chatDisplayStyle) {\n  var chatDisplay = document.createElement('div');\n  chatDisplay.className = \"swc-chat-display \".concat(chatDisplayStyle === 'modern' ? 'swc-modern' : 'swc-classic');\n  var inputContainer = document.createElement('div');\n  inputContainer.className = 'swc-input-container';\n  var userInput = document.createElement('input');\n  userInput.type = 'text';\n  userInput.className = 'swc-user-input';\n  userInput.placeholder = 'Type your message...';\n  var sendButton = document.createElement('button');\n  sendButton.className = 'swc-send-button';\n  sendButton.textContent = 'Send';\n  var optionsContainer = document.createElement('div');\n  optionsContainer.className = 'swc-options-container';\n  inputContainer.appendChild(userInput);\n  inputContainer.appendChild(sendButton);\n  var typingIndicator = document.createElement('div');\n  typingIndicator.className = 'swc-typing-indicator';\n  typingIndicator.innerHTML = '<span></span><span></span><span></span>';\n  containerElement.appendChild(chatDisplay);\n  containerElement.appendChild(optionsContainer);\n  containerElement.appendChild(inputContainer);\n\n  // Apply theme color and bot name\n  containerElement.style.setProperty('--swc-theme-color', themeColor);\n  containerElement.style.setProperty('--swc-bot-name', \"\\\"\".concat(botName, \"\\\"\"));\n  return {\n    chatDisplay: chatDisplay,\n    userInput: userInput,\n    sendButton: sendButton,\n    optionsContainer: optionsContainer,\n    typingIndicator: typingIndicator\n  };\n}\nfunction initializeChatbot() {\n  var customKnowledgeBase = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var chatbotElements = document.querySelectorAll('[data-swc]');\n  chatbotElements.forEach(function (element) {\n    var themeColor = element.getAttribute('data-swc-theme-color') || '#007bff';\n    var botName = element.getAttribute('data-swc-bot-name') || 'Bot';\n    var chatDisplayStyle = element.getAttribute('data-swc-chat-display') || 'classic';\n    var replyDuration = parseInt(element.getAttribute('data-swc-reply-duration')) || 0;\n    var chatbot = new SenangWebsChatbot(customKnowledgeBase || defaultKnowledgeBase);\n    var _createChatbotUI = createChatbotUI(element, themeColor, botName, chatDisplayStyle),\n      chatDisplay = _createChatbotUI.chatDisplay,\n      userInput = _createChatbotUI.userInput,\n      sendButton = _createChatbotUI.sendButton,\n      optionsContainer = _createChatbotUI.optionsContainer,\n      typingIndicator = _createChatbotUI.typingIndicator;\n    function displayBotMessage(message, options) {\n      removeTypingIndicator();\n      var messageElement = document.createElement('div');\n      messageElement.className = 'swc-message swc-bot-message';\n      messageElement.innerHTML = \"\".concat(message);\n      chatDisplay.appendChild(messageElement);\n      smoothScrollToBottom(chatDisplay);\n      optionsContainer.innerHTML = '';\n      if (options && options.length > 0) {\n        optionsContainer.style.display = 'flex';\n        options.forEach(function (option) {\n          var button = document.createElement('button');\n          button.textContent = option.label;\n          button.onclick = function () {\n            return handleOptionClick(option.reply_id);\n          };\n          optionsContainer.appendChild(button);\n        });\n      } else {\n        optionsContainer.style.display = 'none';\n      }\n    }\n    function handleUserInput() {\n      var message = userInput.value.trim();\n      if (message) {\n        var userMessageElement = document.createElement('div');\n        userMessageElement.className = 'swc-message swc-user-message';\n        userMessageElement.innerHTML = \"\".concat(message);\n        chatDisplay.appendChild(userMessageElement);\n        smoothScrollToBottom(chatDisplay);\n        userInput.value = '';\n        disableUserInput();\n        showTypingIndicator();\n        setTimeout(function () {\n          var response = chatbot.handleInput(message);\n          displayBotMessage(response.reply, response.options);\n          enableUserInput();\n        }, replyDuration);\n      }\n    }\n    function handleOptionClick(replyId) {\n      disableUserInput();\n      showTypingIndicator();\n      setTimeout(function () {\n        var response = chatbot.handleOptionSelection(replyId);\n        displayBotMessage(response.reply, response.options);\n        enableUserInput();\n      }, replyDuration);\n    }\n    function disableUserInput() {\n      userInput.disabled = true;\n      sendButton.disabled = true;\n    }\n    function enableUserInput() {\n      userInput.disabled = false;\n      sendButton.disabled = false;\n    }\n    function showTypingIndicator() {\n      removeTypingIndicator(); // Remove any existing indicator first\n      chatDisplay.appendChild(typingIndicator);\n      smoothScrollToBottom(chatDisplay);\n    }\n    function removeTypingIndicator() {\n      if (typingIndicator.parentNode === chatDisplay) {\n        chatDisplay.removeChild(typingIndicator);\n      }\n    }\n    function smoothScrollToBottom(element) {\n      var targetScrollTop = element.scrollHeight - element.clientHeight;\n      var startScrollTop = element.scrollTop;\n      var distance = targetScrollTop - startScrollTop;\n      var duration = 300; // ms\n      var start = null;\n      function step(timestamp) {\n        if (!start) start = timestamp;\n        var progress = timestamp - start;\n        element.scrollTop = easeInOutCubic(progress, startScrollTop, distance, duration);\n        if (progress < duration) {\n          window.requestAnimationFrame(step);\n        }\n      }\n      window.requestAnimationFrame(step);\n    }\n    function easeInOutCubic(t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t * t + b;\n      t -= 2;\n      return c / 2 * (t * t * t + 2) + b;\n    }\n    sendButton.addEventListener('click', handleUserInput);\n    userInput.addEventListener('keypress', function (e) {\n      if (e.key === 'Enter') {\n        handleUserInput();\n      }\n    });\n\n    // Initialize the chatbot\n    var initialResponse = chatbot.init();\n    displayBotMessage(initialResponse.reply, initialResponse.options);\n  });\n}\n\n// Export the main class and functions\n\n\n// Make initializeChatbot globally accessible\nif (typeof window !== 'undefined') {\n  window.initializeChatbot = initializeChatbot;\n}\n\n//# sourceURL=webpack://SWC/./src/js/swc.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/swc.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});